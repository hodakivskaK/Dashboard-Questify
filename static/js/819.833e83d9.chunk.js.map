{"version":3,"file":"static/js/819.833e83d9.chunk.js","mappings":"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","sources":["webpack://Questify/./src/components/AddTaskBtn/AddTaskBtn.module.css?0a25","components/AddTaskBtn/AddTaskBtn.jsx","webpack://Questify/./src/components/CreateCardModal/CardForm/CardForm.module.css?8e78","components/inputStyles.js","components/CreateCardModal/CardForm/CardForm.jsx","webpack://Questify/./src/components/CreateCardModal/NewTaskModal.module.css?6ace","components/CreateCardModal/NewTaskModal.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"addTaskBtn\":\"AddTaskBtn_addTaskBtn__tfpui\",\"addTaskBtn__icon\":\"AddTaskBtn_addTaskBtn__icon__SfWSm\"};","import { BsFillPlusSquareFill } from 'react-icons/bs';\nimport s from './AddTaskBtn.module.css'\n\n\nexport const AddTaskBtn = ({onClick}) => {\n\n\n    return (\n     <button type='button' className={s.addTaskBtn} onClick={onClick}>\n      <BsFillPlusSquareFill className={s.addTaskBtn__icon}/>\n     </button>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"cardForm__difficultyBox\":\"CardForm_cardForm__difficultyBox__j3k6T\",\"cardForm__titleCategory\":\"CardForm_cardForm__titleCategory__oGqAd\",\"cardForm__inputBox\":\"CardForm_cardForm__inputBox__fNtje\",\"cardForm__titleCenter\":\"CardForm_cardForm__titleCenter__z1Gb+\",\"cardForm__inputName\":\"CardForm_cardForm__inputName__UiizQ\",\"cardForm__categoryBox\":\"CardForm_cardForm__categoryBox__9Lr7f\",\"cardForm__require\":\"CardForm_cardForm__require__-n3Ju\",\"cardForm__bottom\":\"CardForm_cardForm__bottom__JEZmH\",\"cardForm__btnSubmit\":\"CardForm_cardForm__btnSubmit__L1z9X\",\"cardForm__btnClose\":\"CardForm_cardForm__btnClose__NXSyx\",\"cardForm__datePickerBox\":\"CardForm_cardForm__datePickerBox__n8u6O\",\"cardForm__datepicker_toggle\":\"CardForm_cardForm__datepicker_toggle__ndjdJ\",\"cardForm__datepicker_toggle_button\":\"CardForm_cardForm__datepicker_toggle_button__-hY1H\",\"cardForm__datepicker_input\":\"CardForm_cardForm__datepicker_input__zTUf1\"};","export const levelsStyles = {\n    singleValue: styles => ({\n      ...styles,\n      color: \"black\",\n      fontFamily: \"HelveticaNeueCyr, sans-serif\",\n      fontSize: \"16px\",\n      fontWeight: \"400\",\n  \n    }),\n      valueContainer: styles => ({\n      ...styles,\n      padding: 0,\n      display:\"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingLeft: \"18px\",\n    \n    }),\n    control: styles => ({\n      ...styles,\n      outline: 'none',\n      boxShadow: 'none',\n      border: '1px solid #00D7FF',\n      borderRadius: '14px',\n  \n      transition: \"0.2s\",\n      backgroundColor: '#fff',\n      color: '#121417',\n        width: '150px',\n        height: '48px',\n        '&:hover': {\n          border: '1px solid #0198b3',\n        },\n    \n    }),\n    dropdownIndicator: (styles, { isFocused }) => ({\n      ...styles,\n      transition: '500ms ease',\n      color:  '#00D7FF' ,\n      '&:hover': {\n        color: '#0198b3',\n        transform: \"rotate(180deg)\",\n      },\n    }),\n    option: (styles, { isFocused }) => ({\n      ...styles,\n      color: isFocused ? '#121417' : '#838383',\n      fontWeight: isFocused ? '400' : '600',\n      fontSize: '14px',\n      backgroundColor: 'transparent',\n      fontFamily: 'Manrope, sans-serif',\n      cursor: 'pointer',\n      lineHeight: '18px',\n      transition: '200ms ease',\n      '&:hover': {\n        backgroundColor: '#dddbdb',\n        color: '#121417',\n        transform: 'scale(1.05)',\n      },\n    }),\n    menuList: styles => ({\n      ...styles,\n      height: '100%',\n      marginBottom: '8px',\n      backgroundColor: '#FFFFFF',\n      borderRadius: '14px',\n      padding: '14px',\n      margin: '-1px',\n      boxSizing: 'content-box',\n    }),\n\n \n  };\n  \n\n\n  export const categoriesStyles = {\n\n    singleValue: styles => ({\n      ...styles,\n      color: \"black\",\n      fontFamily: \"HelveticaNeueCyr, sans-serif\",\n      fontSize: \"16px\",\n      fontWeight: \"400\",\n  \n    }),\n      valueContainer: styles => ({\n      ...styles,\n      padding: 0,\n      display:\"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingLeft: \"18px\",\n    \n    }),\n    control: styles => ({\n      ...styles,\n      outline: 'none',\n      boxShadow: 'none',\n      border: '1px solid #00a3c2',\n      borderRadius: '14px',\n  \n      transition: \"0.2s\",\n      backgroundColor: 'white',\n      color: '#121417',\n        width: '150px',\n        height: '48px',\n    \n    }),\n    dropdownIndicator: (styles, { isFocused }) => ({\n      ...styles,\n      transition: '500ms ease',\n      color:  '#00D7FF' ,\n      '&:hover': {\n        color: '#0b44cd',\n        transform: \"rotate(180deg)\",\n      },\n    }),\n    option: (styles, { isFocused }) => ({\n      ...styles,\n      color: isFocused ? '#121417' : '#838383',\n      fontSize: '14px',\n      backgroundColor: 'transparent',\n      fontFamily: 'Manrope, sans-serif',\n      fontWeight: '400',\n      cursor: 'pointer',\n      lineHeight: '18px',\n      transition: '200ms ease',\n      '&:hover': {\n        backgroundColor: '#dddbdb',\n        color: '#121417',\n        transform: 'scale(1.05)',\n      },\n    }),\n    menuList: styles => ({\n      ...styles,\n      height: '100%',\n      marginBottom: '8px',\n      backgroundColor: '#FFFFFF',\n      borderRadius: '14px',\n      padding: '14px',\n      margin: '-1px',\n      boxSizing: 'content-box',\n    }),\n\n  \n  };\n  ","import { useState, useEffect } from 'react';\n\nimport s from './CardForm.module.css'\nimport Select from 'react-select';\n\nimport { levelsStyles, categoriesStyles } from '../../inputStyles';\nimport difficulties from 'data/difficulty'\nimport categories from 'data/category'\nimport { GoDotFill } from \"react-icons/go\";\n\nexport const CardForm = ({ sendTask, onClose }) => {\n    const [title, setTitle] = useState('');\n    const [difficulty, setDifficulty] = useState('');\n    const [date, setDate] = useState('YYYY-MM-DD');\n    const [time, setTime] = useState('HH:MM');\n    const [category, setCategory] = useState('');\n    const [isValid, setIsValid] = useState(false);\n\n\n    useEffect(() => {\n      setIsValid(category&&difficulty ? true : false);\n    }, [category, difficulty]);\n\n     // SUBMIT FORM\n     const handleSubmit = (e) => {\n      e.preventDefault();\n      sendTask(difficulty, title, date, category, time);\n      onClose();\n    }\n  \n    // CHANGE FORM\n    const handleChange = (e) => {\n      if(e.currentTarget ===undefined){\n        switch ( e.name) {\n          case \"difficulty\":\n            setDifficulty(e.value)\n              break;\n  \n          case \"category\":\n           setCategory(e.value)\n          break;\n         \n        default:\n        break;\n        }\n  \n        return\n      }\n    \n      if(e.currentTarget){\n        const { name, value } = e.currentTarget \n  \n        switch (name) {\n            case \"title\":\n              setTitle(value)\n            break;\n            case \"date\":\n            const parts = value.split('T');\n            setDate(parts[0])\n            setTime(parts[1])\n            break;\n  \n  \n            default:\n            break;\n      }\n    }    \n    }\n  \n  \n    return (\n     \n   \n    <form action=\"\" onSubmit={handleSubmit}>\n  \n  <div className={s.cardForm__difficultyBox}>\n      <p className={s.cardForm__titleCategory}>Difficulty:</p>\n      <Select\n      className=\"basic-single\"\n      name=\"difficulty\"\n      options={difficulties}\n      styles={levelsStyles}\n      defaultValue={difficulties[1]}\n      onChange={handleChange}\n      />\n      {!isValid && <GoDotFill className={s.cardForm__require}/>}\n    </div>\n\n   <div className={s.cardForm__inputBox}>\n   <label htmlFor=\"title\" className={s.cardForm__titleCenter}>Title:</label>     \n   <input type=\"text\" className={s.cardForm__inputName} name=\"title\" onChange={handleChange}  required/>\n    </div>\n        \n   <div className={s.cardForm__datePickerBox}>\n        {date?<p>{date} {time}</p>:<label htmlFor=\"date\">Date:</label>}\n        <span className={s.cardForm__datepicker_toggle}>\n        <span className={s.cardForm__datepicker_toggle_button}></span>\n          <input name=\"date\" type=\"datetime-local\" className={s.cardForm__datepicker_input} onChange={handleChange}  required/>\n        </span>\n      </div>\n \n  \n   <div className={s.cardForm__categoryBox}>\n   <p className={s.cardForm__titleCategory}>Category:</p>\n   <Select\n   className=\"basic-single\"\n   classNamePrefix=\"select\"\n   name=\"category\"\n   options={categories}\n   styles={categoriesStyles}\n   onChange={handleChange}\n  />\n  {!isValid && <GoDotFill className={s.cardForm__require}/>}\n  </div>\n  \n   <div className={s.cardForm__bottom} >\n   <button disabled={!isValid} type='submit' className={s.cardForm__btnSubmit}> START</button>\n  </div>\n        </form>\n    );\n  }","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"NewTaskModal_modal__BZUAt\",\"modal__btnClose\":\"NewTaskModal_modal__btnClose__ExjHF\",\"modal__title\":\"NewTaskModal_modal__title__vObaa\",\"TriggerPart\":\"NewTaskModal_TriggerPart__IjKeT\",\"TriggerShadow\":\"NewTaskModal_TriggerShadow__p0dLQ\",\"Trigger\":\"NewTaskModal_Trigger__jcbUw\",\"OverlayBackground\":\"NewTaskModal_OverlayBackground__RETL8\",\"Contented\":\"NewTaskModal_Contented__zIf2Y\",\"DialogHeader\":\"NewTaskModal_DialogHeader__37nlU\",\"CloseButton\":\"NewTaskModal_CloseButton__TS2Gq\"};","import { useTransition, useSpring, animated } from '@react-spring/web'\nimport { CgClose } from 'react-icons/cg';\nimport { CardForm } from './CardForm/CardForm';\nimport s from './NewTaskModal.module.css';\n\n\nexport const NewTaskModal = ({ isOpen, onClose, sendTask }) => {\n\n\n\n const transition = useTransition(isOpen, {\n    from: {\n      transform: \"translate(-50%, -50%) rotateX(90deg)\",\n    },\n    enter: {\n      transform: \"translate(-50%, -50%) rotateX(0)\",\n    },\n    leave: {\n      transform: \"translate(-50%, -50%) rotateX(90deg)\",\n    },\n  })\n\n  const [props] = useSpring(\n    () => ({\n      from: { opacity: 0},\n      to: { opacity: 1},\n    }),\n    []\n  )\n\n return  (\n    <div  >\n      <div className={s.Trigger} >\n        <div className={s.TriggerShadow} />\n      </div>\n     \n        {transition((style, isOpen) => (\n          <>\n            {isOpen ? (\n              \n              <animated.div className={s.OverlayBackground} style={props} />\n            ) : null}\n            {isOpen ? (\n              <animated.div className={s.modal} forcemount=\"true\" style={style}>\n                <animated.div  className={s.modal__title}>Create New Quest</animated.div>\n                  <CgClose className={s.modal__btnClose} onClick={onClose} />\n                 <CardForm sendTask={sendTask} onClose={onClose} />\n              </animated.div>\n            ) : null}\n          </>\n        ))}\n      \n    </div>\n  )\n}\n","\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector  } from 'react-redux'\nimport { createPortal } from 'react-dom';\n\nimport { Header } from \"components/Header/Header\";\nimport { AddTaskBtn } from \"components/AddTaskBtn/AddTaskBtn\";\nimport { TaskList } from \"components/TaskList/TaskList\";\nimport { NewTaskModal } from \"components/CreateCardModal/NewTaskModal\";\nimport Loader from \"components/Loader/Loader\";\n\nimport { fetchCard } from 'redux/cards/cardsOperation'\nimport { getIsLoading } from \"redux/cards/cardsSelector\";\nimport { addCard } from \"redux/cards/cardsOperation\";\n\n\n\n// PAGE DashboardPage\nexport default function DashboardPage(){\n  const [showModalNewTask, setShowModalNewTask] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  \n  useEffect(() => {\n    dispatch(fetchCard())\n      }, [dispatch])\n\n\n      const openModal = () => {\n        setShowModalNewTask(true)\n        document.body.style.overflow = 'hidden'; \n      \n      }\n\n      const closeModal = () => {\n        setShowModalNewTask(false)\n        document.body.style.overflow = '';\n      }\n\n\n           // ADD NEW TASK\n        const sendTask = (difficulty, title, date, category, time) => {\n          dispatch(\n            addCard({\n                \"title\": title,\n                  \"difficulty\": difficulty,\n                  \"category\": category,\n                  \"date\": date,\n                  \"time\": time,\n                  \"type\": \"Task\"\n                }\n          ))\n        };\n\n\n    \n    return (\n      <div >\n    <Header/>\n      {isLoading?<Loader/>: <TaskList /> }\n\n      <AddTaskBtn onClick={openModal}/>\n\n      {showModalNewTask && createPortal(\n        <NewTaskModal isOpen={showModalNewTask} onClose={closeModal} sendTask={sendTask}/>,\n        document.body\n      )}\n  </div>\n      \n    ) ;\n}"],"names":["AddTaskBtn","_ref","onClick","_jsx","type","className","s","children","BsFillPlusSquareFill","levelsStyles","singleValue","styles","color","fontFamily","fontSize","fontWeight","valueContainer","padding","display","alignItems","justifyContent","paddingLeft","control","outline","boxShadow","border","borderRadius","transition","backgroundColor","width","height","dropdownIndicator","isFocused","transform","option","_ref2","cursor","lineHeight","menuList","marginBottom","margin","boxSizing","categoriesStyles","_ref3","_ref4","CardForm","sendTask","onClose","title","setTitle","useState","difficulty","setDifficulty","date","setDate","time","setTime","category","setCategory","isValid","setIsValid","useEffect","handleChange","e","undefined","currentTarget","name","value","parts","split","_jsxs","action","onSubmit","preventDefault","Select","options","difficulties","defaultValue","onChange","GoDotFill","htmlFor","required","classNamePrefix","categories","disabled","NewTaskModal","isOpen","useTransition","from","enter","leave","props","useSpring","opacity","to","style","_Fragment","animated","forcemount","CgClose","DashboardPage","showModalNewTask","setShowModalNewTask","dispatch","useDispatch","isLoading","useSelector","getIsLoading","fetchCard","Header","Loader","TaskList","openModal","document","body","overflow","createPortal","closeModal","addCard"],"sourceRoot":""}