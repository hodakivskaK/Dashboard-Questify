{"version":3,"file":"static/js/883.019c4a18.chunk.js","mappings":"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","sources":["webpack://Questify/./src/components/Header/Header.module.css?4e72","components/Header/Header.jsx","webpack://Questify/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://Questify/./src/components/Task/Task.module.css?22e8","webpack://Questify/./src/components/Task/DeleteModal/DeleteModal.module.css?ac61","components/Task/DeleteModal/DeleteModal.jsx","components/Task/EditCard/inputStyles.js","webpack://Questify/./src/components/Task/EditCard/EditCard.module.css?d9b2","components/Task/EditCard/EditCard.jsx","webpack://Questify/./src/components/Task/CompletedTask/CompletedTask.module.css?01bc","components/Task/CompletedTask/CompletedTask.jsx","components/Task/Task.jsx","webpack://Questify/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.jsx","redux/cards/cardsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HXQOm\",\"header__container\":\"Header_header__container__urE9T\",\"header__logo\":\"Header_header__logo__DRD+M\",\"header__containerRight\":\"Header_header__containerRight__c1yTt\",\"header__btnTaskCompleteBox\":\"Header_header__btnTaskCompleteBox__50oSI\",\"header__btnTaskComplete\":\"Header_header__btnTaskComplete__BONf-\",\"header__btnLogOutBox\":\"Header_header__btnLogOutBox__L-SR8\",\"header__btnLogOut\":\"Header_header__btnLogOut__bdwbe\"};","import { useSelector, useDispatch } from 'react-redux'\nimport { Link, useLocation } from 'react-router-dom'; \n\nimport { logOut } from 'redux/auth/authOperation';\nimport authSelector from '../../redux/auth/authSelector'\n\nimport s from './Header.module.css'\nimport { FaTrophy } from \"react-icons/fa\";\nimport { IoMdLogOut } from \"react-icons/io\";\nimport { PiTargetBold } from \"react-icons/pi\";\n\n\nexport const Header = () => {\n  const email = useSelector(authSelector.getUserEmail)\n  const dispatch = useDispatch();\n  const location = useLocation();\n  \n    return (\n      <header className={s.header}>\n        \n        <div className={s.header__container}>\n        <span className={s.header__logo}>Questify</span>\n       \n       <div>\n        <img src=\"\" alt=\"\" />\n            {email}\n       </div>\n\n      <div className={s.header__containerRight}>\n            \n            {location.pathname===\"/completed\"?\n            <Link to=\"/dashboard\" className={s.header__btnTaskCompleteBox}>\n            <PiTargetBold   className={s.header__btnTaskComplete}/>\n          </Link>\n          :\n          <Link to=\"/completed\" className={s.header__btnTaskCompleteBox}>\n            <FaTrophy className={s.header__btnTaskComplete}/>\n          </Link>}\n          \n          \n\n            <div className={s.header__btnLogOutBox} onClick={() => dispatch(logOut())}>\n            <IoMdLogOut className={s.header__btnLogOut}/>\n\n            </div>\n       </div>\n       </div>\n \n      </header>\n    );\n  };\n  ","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\"};","import s from './Loader.module.css'\n\nimport { BounceLoader } from 'react-spinners';\n\nexport default function Loader() {\n  return (\n  <BounceLoader color=\"#00D7FF\" className={s.spinner}/>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"task\":\"Task_task__WpHEM\",\"task__top\":\"Task_task__top__bxWtj\",\"task__difficultyBox\":\"Task_task__difficultyBox__beoRQ\",\"task__dateBox\":\"Task_task__dateBox__rPw-h\",\"task__difficulty\":\"Task_task__difficulty__Fcppj\",\"task__difficultyPoint\":\"Task_task__difficultyPoint__1jmpB\",\"task__title\":\"Task_task__title__W8oWB\",\"task__inputName\":\"Task_task__inputName__xoBlJ\",\"task__date\":\"Task_task__date__L4FkS\",\"task__bottom\":\"Task_task__bottom__EEpOg\",\"task__category\":\"Task_task__category__vlx17\",\"task__btnUpdate\":\"Task_task__btnUpdate__GRK92\",\"task__btnCompete\":\"Task_task__btnCompete__2kKgm\",\"task__btnClose\":\"Task_task__btnClose__1A9Xp\",\"task__btnSubmit\":\"Task_task__btnSubmit__dgzkf\",\"task__datePickerBox\":\"Task_task__datePickerBox__F6VM3\",\"task__datepicker_toggle\":\"Task_task__datepicker_toggle__Acd9S\",\"task__datepicker_toggle_button\":\"Task_task__datepicker_toggle_button__8eZuF\",\"task__timepicker_toggle_button\":\"Task_task__timepicker_toggle_button__CPdho\",\"task__datepicker_input\":\"Task_task__datepicker_input__UH++9\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal__background\":\"DeleteModal_modal__background__2E3sC\",\"modal__wrapper\":\"DeleteModal_modal__wrapper__lL1j7\",\"modal\":\"DeleteModal_modal__0Afhh\",\"modal__btnBox\":\"DeleteModal_modal__btnBox__p9GS0\",\"modal__btnClose\":\"DeleteModal_modal__btnClose__JVV-m\",\"modal__btnDelete\":\"DeleteModal_modal__btnDelete__F1rQA\",\"modal__title\":\"DeleteModal_modal__title__BLnFZ\"};","\n\nimport s from './DeleteModal.module.css'\nimport { useDispatch } from \"react-redux\";\n\nimport {  deleteCard } from \"redux/cards/cardsOperation\";\n\nexport const DeleteModal = ({ onClose, cardID }) => {\n    const dispatch = useDispatch();\n  \n    const onDeleteContact = (cardID) => {\n    if(cardID){\n      dispatch(deleteCard(cardID));\n    }\n  }\n  \n    return (\n      <>\n      <div className={s.modal__background}/>\n      <div className={s.modal__wrapper}>\n        <div className={s.modal}>\n       \n          \n         <h3 className={s.modal__title}>Delete this Quest?</h3>\n         <div className={s.modal__btnBox}>\n          <button className={s.modal__btnClose} onClick={onClose}>\n              CANCEL\n          </button>\n\n          <button className={s.modal__btnDelete} onClick={() => onDeleteContact(cardID)}>\n            DELETE          \n          </button>\n   \n         </div>\n        \n        </div>\n        </div>\n  </>\n    );\n  }","export const levelsStyles = {\n    singleValue: styles => ({\n      ...styles,\n      color: \"white\",\n      fontFamily: \"HelveticaNeueCyr, sans-serif\",\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n      padding: '5px 0',\n      \n  \n    }),\n    control: styles => ({\n      ...styles,\n      minHeight: '23px',\n      outline: 'none',\n      boxShadow: 'none',\n      border: 'none',\n      transition: \"0.2s\",\n      backgroundColor: 'transparent',\n      color: '#121417',\n        width: '100px',\n        height: '28px',\n    \n    \n    }),\n    indicatorSeparator: (styles) => ({\n      ...styles,\n      backgroundColor: \"transparent\"\n    }),\n    dropdownIndicator: (styles) => ({\n      ...styles,\n      padding: \"0\",\n      paddingRight: \"12px\",\n      transition: '500ms ease',\n      color:  '#00D7FF' ,\n      '&:hover': {\n        color: '#0198b3',\n      },\n    }),\n    menu: (styles) => ({\n      ...styles,\n      marginTop: '5px',\n      width: '90px',\n      borderRadius: '10px',\n      \n    }),\n    option: (styles, { isFocused }) => ({\n      ...styles,\n      color: isFocused ? '#fff' : '#838383',\n      fontWeight: '600',\n      fontSize: '14px',\n      backgroundColor: 'transparent',\n    \n      fontFamily: 'Manrope, sans-serif',\n      cursor: 'pointer',\n      lineHeight: '18px',\n      transition: '0.5s ease',\n      '&:hover': {\n        color: '#fff',\n      },\n    }),\n    menuList: styles => ({\n      ...styles,\n      height: '100%',\n      width: '90px',\n      marginBottom: '8px',\n      backgroundColor: '#0e253b',\n      padding: '14px',\n      margin: '-1px',\n      boxSizing: 'content-box',\n      borderRadius: '10px',\n    }),\n  };\n  \n\n\n  export const categoriesStyles = {\n    singleValue: styles => ({\n      ...styles,\n      color: \"white\",\n      fontFamily: \"HelveticaNeueCyr, sans-serif\",\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n    }),\n      valueContainer: styles => ({\n      ...styles,\n      padding: 0,\n      display:\"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingLeft: '20px',\n\n    }),\n    control: styles => ({\n      ...styles,\n      minHeight: '23px',\n      outline: 'none',\n      boxShadow: 'none',\n      border: 'none',\n      transition: \"0.2s\",\n      backgroundColor: '#0e253b',\n      marginLeft: \"-20px\",\n      color: '#121417',\n      width: '150px',\n      height: '25px',\n      borderTopRightRadius: \"18px\",\n      borderBottomRightRadius: \"18px\",\n    \n        '&:hover': {\n          backgroundColor: '#0e253b',\n        },\n    \n    }),\n    indicatorSeparator: (styles) => ({\n      ...styles,\n      backgroundColor: \"transparent\"\n    }),\n    dropdownIndicator: (styles) => ({\n      ...styles,\n      padding: \"0\",\n      paddingRight: \"12px\",\n      transition: '500ms ease',\n      color:  '#00D7FF' ,\n      '&:hover': {\n        color: '#0198b3',\n      },\n    }),\n    menu: (styles, { isFocused }) => ({\n      ...styles,\n      zIndex: '1000',\n      marginLeft: '-18px',\n      marginTop: '-200px',\n      width: '140px',\n      borderRadius: '10px',\n      \n    }),\n    option: (styles, { isFocused }) => ({\n      ...styles,\n      color: isFocused ? '#fff' : '#838383',\n      fontWeight: '600',\n      fontSize: '14px',\n      backgroundColor: 'transparent',\n    \n      fontFamily: 'Manrope, sans-serif',\n      cursor: 'pointer',\n      lineHeight: '18px',\n      transition: '0.5s ease',\n      '&:hover': {\n        color: '#fff',\n      },\n    }),\n    menuList: styles => ({\n      ...styles,\n      height: '100%',\n      width: '140px',\n      marginBottom: '8px',\n      backgroundColor: '#0e253b',\n      padding: '14px',\n      margin: '-1px',\n      boxSizing: 'content-box',\n      borderRadius: '10px',\n    }),\n\n  };\n  ","// extracted by mini-css-extract-plugin\nexport default {\"modal__wrapper\":\"EditCard_modal__wrapper__TE-kS\",\"modal\":\"EditCard_modal__Q-UpY\",\"editForm__inputBox\":\"EditCard_editForm__inputBox__EszRH\",\"editForm__title\":\"EditCard_editForm__title__YoFAR\",\"editForm__inputName\":\"EditCard_editForm__inputName__OGZ72\",\"editForm__datePickerBox\":\"EditCard_editForm__datePickerBox__ahrzW\",\"editForm__datepickerEmpty\":\"EditCard_editForm__datepickerEmpty__Dvdqp\",\"editForm__datepicker_toggle\":\"EditCard_editForm__datepicker_toggle__PKNGh\",\"editForm__datepicker_toggle_button\":\"EditCard_editForm__datepicker_toggle_button__QHDsX\",\"editForm__datepicker_input\":\"EditCard_editForm__datepicker_input__uzs7A\",\"editForm__bottom\":\"EditCard_editForm__bottom__7A-Ez\",\"editForm__btnClose\":\"EditCard_editForm__btnClose__LwKY+\",\"editForm__btnCompete\":\"EditCard_editForm__btnCompete__tskt+\",\"editForm__btnCompeteIcon\":\"EditCard_editForm__btnCompeteIcon__yIzJN\"};","  import { useState } from 'react';\n\n    import Select from 'react-select';\n    import { editCard } from \"redux/cards/cardsOperation\";\n\nimport { useDispatch } from 'react-redux';\n    import { levelsStyles, categoriesStyles } from './inputStyles';\n    import difficulties from 'data/difficulty'\n    import categories from 'data/category'\n\nimport s from './EditCard.module.css'\nimport { CgClose } from 'react-icons/cg';\nimport { FaCheck } from \"react-icons/fa6\";\n\nexport const EditCard = ({cardID, onClose}) => {   \n        const [title, setTitle] = useState('');\n        const [difficulty, setDifficulty] = useState('');\n        const [date, setDate] = useState('YYYY-MM-DD');\n        const [time, setTime] = useState('HH:MM');\n        const [category, setCategory] = useState('');\n        const dispatch = useDispatch();\n\n         // SUBMIT FORM\n         const handleSubmit = (e) => {\n          e.preventDefault();\n          dispatch(\n            editCard({\n              id: cardID,\n              card: {\n                title: title,\n                difficulty: difficulty,\n                category: category,\n                date: date,\n                time: time,\n                type: \"Task\",\n              },\n            })\n          );\n          // onClose();\n        }\n      \n        // CHANGE FORM\n        const handleChange = (e) => {\n          if(e.currentTarget ===undefined){\n            switch ( e.name) {\n              case \"difficulty\":\n                setDifficulty(e.value)\n                  break;\n      \n              case \"category\":\n               setCategory(e.value)\n              break;\n             \n            default:\n            break;\n            }\n      \n            return\n          }\n        \n          if(e.currentTarget){\n            const { name, value } = e.currentTarget \n      \n            switch (name) {\n                case \"title\":\n                  setTitle(value)\n                break;\n                 \n                case \"date\":\n                const parts = value.split('T');\n                setDate(parts[0])\n                setTime(parts[1])\n                break;\n      \n      \n                default:\n                break;\n          }\n        }    \n        }\n      \n      \n        return (\n          \n        <div className={s.modal__wrapper}>\n        <div className={s.modal}>\n        <form action=\"\" onSubmit={handleSubmit}>\n      \n      <div className={s.cardForm__top}>\n       <Select\n       className=\"basic-single\"\n       name=\"difficulty\"\n       options={difficulties}\n       styles={levelsStyles}\n       defaultValue=\"ввввв\"\n       onChange={handleChange}\n       required\n      />\n         </div>\n    \n       <div className={s.editForm__inputBox}>\n       <label htmlFor=\"title\" className={s.editForm__title}>EDIT QUEST:</label>     \n       <input type=\"text\" className={s.editForm__inputName} name=\"title\" onChange={handleChange}  required/>\n        </div>\n            \n       <div className={s.editForm__datePickerBox}>\n            {date?<p className={s.editForm__datepickerEmpty}>{date} {time}</p>:<label htmlFor=\"date\">Date:</label>}\n            <span className={s.editForm__datepicker_toggle}>\n            <span className={s.editForm__datepicker_toggle_button}></span>\n              <input name=\"date\" type=\"datetime-local\" className={s.editForm__datepicker_input} onChange={handleChange}  required/>\n            </span>\n          </div>\n     \n      \n     \n       <Select\n       className=\"basic-single\"\n       classNamePrefix=\"select\"\n       name=\"category\"\n       options={categories}\n       styles={categoriesStyles}\n       onChange={handleChange}\n       required\n      />\n      \n       <div className={s.editForm__bottom} >\n       <CgClose  className={s.editForm__btnClose} onClick={onClose}/>\n       <button type='submit' className={s.editForm__btnCompete}>\n        <FaCheck  className={s.editForm__btnCompeteIcon} />\n        </button>\n      </div>\n            </form>\n        \n      \n      </div>\n      </div>\n        );\n      }\n    \n  \n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"completedTask_card\":\"CompletedTask_completedTask_card__ueHyb\",\"completedTask_textBox\":\"CompletedTask_completedTask_textBox__N8KVW\",\"completedTask_CompletedTitle\":\"CompletedTask_completedTask_CompletedTitle__A6N39\",\"completedTask_title\":\"CompletedTask_completedTask_title__SvHCf\",\"completedTask_img\":\"CompletedTask_completedTask_img__FOF7R\"};","\nimport s from './CompletedTask.module.css'\n// import image\nimport completed from 'img/award_3x.png'\n\nexport const CompletedTask = ({title}) => {\n\n    function shortTitle() {\n        if (title.length > 13) {\n            return title.substring(0, 13) + \"...\";\n        } else {\n            return title;\n        }\n    }\n   \n    return (\n        <div className={s.completedTask_card}>\n        <div className={s.completedTask_textBox}>\n                <p className={s.completedTask_CompletedTitle}>COMPLETED:</p>\n                <span className={s.completedTask_title}>{shortTitle()}</span>\n        </div>\n        <img src={completed} alt=\"award\" className={s.completedTask_img}/>\n        </div>\n    );\n  }\n\n\n","import { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux'\nimport { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport {confirmCompleteCard } from \"redux/cards/cardsOperation\";\n\n// style\nimport s from './Task.module.css'\n\nimport { DeleteModal } from './DeleteModal/DeleteModal';\nimport { EditCard } from './EditCard/EditCard';\nimport { CompletedTask } from './CompletedTask/CompletedTask';\nimport difficulties from '../../data/difficulty'\nimport categories from '../../data/category'\n\n// import icons\nimport { RiPencilFill } from \"react-icons/ri\";\nimport { AiFillStar } from 'react-icons/ai';\nimport { CgClose } from 'react-icons/cg';\nimport { FaCheck } from \"react-icons/fa6\";\n\n\n\n//COMPONENT\nexport const Task = ({card}) => {\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [modalOpen, setModalOpen] = useState(null);\n\n  const dispatch = useDispatch();\n  const taskId = nanoid();\n  const modalContainer = document.getElementById(`${modalOpen}`);\n\n\n  const confirmCard = (cardID) => {\n    if(cardID){\n      dispatch(confirmCompleteCard(cardID));\n    }\n  }\n  \n\n  const editTaskModal = (taskId) => {\n      setModalOpen(taskId);\n      setShowEditModal(true);\n  }\n\n  const deleteTaskModal= ( taskId) => {\n      setModalOpen(taskId);\n      setShowDeleteModal(true);\n    }\n\n    return (\n      \n        <div className={s.task} id={taskId}>\n        {card.status===\"Complete\"?\n       <CompletedTask title={card.title}/>:\n        <div>\n          <div className={s.task__top}>\n  \n          {\n                (() => {\n                  const matchedDifficulties = difficulties.find((difficulty) => difficulty.value === card.difficulty);\n                  if (matchedDifficulties) {\n                    return (\n                      <div key={nanoid()} className={s.task__difficultyBox}> \n            <span className={s.task__difficultyPoint} style={{backgroundColor: matchedDifficulties.color}}></span>\n            <p className={s.task__difficulty} >{card.difficulty}</p> </div>\n                    );\n                  }\n                  return null;\n                })()\n          }\n                  \n            <AiFillStar className={s.task__favIcon}/>\n          </div>   \n          \n          <p className={s.task__title}> {card.title} </p>\n        \n          <div className={s.task__dateBox}>\n            <p className={s.task__date}>{card.date}</p>\n            <p className={s.task__date}>{card.time}</p>\n          </div>\n  \n            {\n            (() => {\n              const matchedCategory = categories.find((category) => category.value === card.category);\n              if (matchedCategory) {\n                return (\n                  <p key={nanoid()} className={s.task__category} style={{ backgroundColor: matchedCategory.color }}>\n                    {card.category}\n                  </p>\n                );\n              }\n              return null;\n            })()\n          }\n        \n        <div className={s.task__bottom}>\n            <RiPencilFill className={s.task__btnUpdate} onClick={()=>editTaskModal(taskId)}/>\n            <CgClose  className={s.task__btnClose} onClick={()=> deleteTaskModal(taskId)}/>\n            <FaCheck className={s.task__btnCompete} onClick={()=> confirmCard(card._id)}/>\n        </div>\n    \n        {showDeleteModal && modalContainer && createPortal(<DeleteModal cardID={card._id} onClose={() => setShowDeleteModal(false)} />, modalContainer)}\n        {showEditModal && modalContainer && createPortal(<EditCard cardID={card._id} onClose={() => setShowEditModal(false)} />, modalContainer)}\n        </div>\n        }\n       \n      </div>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"taskList\":\"TaskList_taskList__iq+88\",\"taskList__emptyBox\":\"TaskList_taskList__emptyBox__mQKku\",\"taskList__emptyTitle\":\"TaskList_taskList__emptyTitle__4ILcN\",\"taskList__imageBox\":\"TaskList_taskList__imageBox__y6iiV\",\"taskList__imageTarget\":\"TaskList_taskList__imageTarget__zT+MP\",\"sun-rise\":\"TaskList_sun-rise__ag78c\",\"taskList__imageArrow\":\"TaskList_taskList__imageArrow__Olmpg\"};","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { Task } from '../Task/Task';\nimport { getCards } from 'redux/cards/cardsSelector';\n\nimport s from './TaskList.module.css';\nimport arrow from 'img/Arrow_3x.png'\nimport target from 'img/Taget_2.png'\n\nexport const TaskList = () => {\n      const [cards, setCards] = useState([]);\n\n      const dispatch = useDispatch();\n      const location = useLocation();\n      \n      const tasks = useSelector(getCards);\n\n\n    useEffect(() => {\n      if(tasks.cards!==undefined){\n        location.pathname === \"/dashboard\"?\n        setCards(tasks.cards.filter(card => card.status === \"Incomplete\"))\n        :setCards(tasks.cards.filter(card => card.status === \"Complete\"));\n      }\n        }, [dispatch, tasks, location.pathname]);\n\n    return (\n          cards.length===0?\n          <div  className={s.taskList__emptyBox}>\n            <h2 className={s.taskList__emptyTitle}> You don't have any Quest now</h2>\n            <div className={s.taskList__imageBox}>\n               <img src={target} alt=\"target\"  className={s.taskList__imageTarget}/>\n               <img src={arrow} alt=\"arrow\"  className={s.taskList__imageArrow}/>\n            </div>\n          </div>\n            :  \n            <div className={s.taskList}> \n              {cards.map(card => <Task key={nanoid()}  card={card}/>)}\n            </div>\n  \n    );\n  };\n\n","\nexport const getCards = state => state.cards.entities;\nexport const getIsLoading = state => state.cards.isLoading;\nexport const getError = state => state.cards.error;\n"],"names":["Header","email","useSelector","authSelector","dispatch","useDispatch","location","useLocation","className","s","src","alt","pathname","to","onClick","logOut","Loader","BounceLoader","color","DeleteModal","onClose","cardID","deleteCard","onDeleteContact","levelsStyles","singleValue","styles","fontFamily","fontSize","fontWeight","padding","control","minHeight","outline","boxShadow","border","transition","backgroundColor","width","height","indicatorSeparator","dropdownIndicator","paddingRight","menu","marginTop","borderRadius","option","isFocused","cursor","lineHeight","menuList","marginBottom","margin","boxSizing","categoriesStyles","valueContainer","display","alignItems","justifyContent","paddingLeft","marginLeft","borderTopRightRadius","borderBottomRightRadius","zIndex","EditCard","useState","title","setTitle","difficulty","setDifficulty","date","setDate","time","setTime","category","setCategory","handleChange","e","undefined","currentTarget","name","value","parts","split","action","onSubmit","preventDefault","editCard","id","card","type","options","difficulties","defaultValue","onChange","required","htmlFor","classNamePrefix","categories","CompletedTask","length","substring","completed","Task","showDeleteModal","setShowDeleteModal","showEditModal","setShowEditModal","modalOpen","setModalOpen","taskId","nanoid","modalContainer","document","getElementById","status","matchedDifficulties","style","matchedCategory","editTaskModal","deleteTaskModal","_id","confirmCompleteCard","createPortal","TaskList","cards","setCards","tasks","getCards","useEffect","filter","map","state","entities","getIsLoading","isLoading"],"sourceRoot":""}