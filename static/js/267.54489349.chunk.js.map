{"version":3,"file":"static/js/267.54489349.chunk.js","mappings":"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","sources":["webpack://Questify/./src/components/Header/Header.module.css?4e72","components/Header/Header.jsx","webpack://Questify/./src/components/AddTaskBtn/AddTaskBtn.module.css?0a25","components/AddTaskBtn/AddTaskBtn.jsx","webpack://Questify/./src/components/Task/TaskForm.module.css?09c0","webpack://Questify/./src/components/Task/DeleteModal/DeleteModal.module.css?ac61","components/Task/DeleteModal/DeleteModal.jsx","components/Task/TaskForm.jsx","redux/cards/cardsSelector.js","webpack://Questify/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.jsx","webpack://Questify/./src/components/ModalWindowFormTask/ModalWindowFormTask.module.css?a616","webpack://Questify/./src/components/ModalWindowFormTask/CardForm/CardForm.module.css?31d6","components/ModalWindowFormTask/CardForm/inputStyles.js","components/ModalWindowFormTask/CardForm/CardForm.jsx","components/ModalWindowFormTask/ModalWindowFormTask.jsx","webpack://Questify/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HXQOm\",\"header__container\":\"Header_header__container__urE9T\",\"header__logo\":\"Header_header__logo__DRD+M\",\"header__containerRight\":\"Header_header__containerRight__c1yTt\",\"header__btnTaskCompleteBox\":\"Header_header__btnTaskCompleteBox__50oSI\",\"header__btnTaskComplete\":\"Header_header__btnTaskComplete__BONf-\",\"header__btnLogOutBox\":\"Header_header__btnLogOutBox__L-SR8\",\"header__btnLogOut\":\"Header_header__btnLogOut__bdwbe\"};","import { useSelector, useDispatch } from 'react-redux'\nimport { NavLink, useNavigate } from 'react-router-dom'; \n\nimport { logOut } from 'redux/auth/authOperation';\nimport authSelector from '../../redux/auth/authSelector'\n\nimport s from './Header.module.css'\nimport { FaTrophy } from \"react-icons/fa\";\nimport { IoMdLogOut } from \"react-icons/io\";\n\nexport const Header = () => {\n  const email = useSelector(authSelector.getUserEmail)\n  const dispatch = useDispatch();\n  const nav = useNavigate;\n  console.log(nav);\n  \n    return (\n      <header className={s.header}>\n        \n        <div className={s.header__container}>\n        <span className={s.header__logo}>Questify</span>\n       \n       <div>\n        <img src=\"\" alt=\"\" />\n            {email}\n       </div>\n\n      <div className={s.header__containerRight}>\n            \n            <NavLink to=\"/dashboard/complete\" className={s.header__btnTaskCompleteBox}>\n              <FaTrophy className={s.header__btnTaskComplete}/>\n            </NavLink>\n            <div className={s.header__btnLogOutBox} onClick={() => dispatch(logOut())}>\n            <IoMdLogOut className={s.header__btnLogOut}/>\n\n            </div>\n       </div>\n       </div>\n \n      </header>\n    );\n  };\n  ","// extracted by mini-css-extract-plugin\nexport default {\"addTaskBtn\":\"AddTaskBtn_addTaskBtn__tfpui\",\"addTaskBtn__icon\":\"AddTaskBtn_addTaskBtn__icon__SfWSm\"};","import { BsFillPlusSquareFill } from 'react-icons/bs';\nimport s from './AddTaskBtn.module.css'\n\n\nexport const AddTaskBtn = ({onClick}) => {\n\n\n    return (\n     <button type='button' className={s.addTaskBtn} onClick={onClick}>\n      <BsFillPlusSquareFill className={s.addTaskBtn__icon}/>\n     </button>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"task\":\"TaskForm_task__DyrEy\",\"task__top\":\"TaskForm_task__top__XOuvj\",\"task__difficultyBox\":\"TaskForm_task__difficultyBox__tUtlT\",\"task__dateBox\":\"TaskForm_task__dateBox__-qxOR\",\"task__difficulty\":\"TaskForm_task__difficulty__jZRax\",\"task__difficultyPoint\":\"TaskForm_task__difficultyPoint__WXuqz\",\"task__title\":\"TaskForm_task__title__-eMyZ\",\"task__inputName\":\"TaskForm_task__inputName__mMZNE\",\"task__date\":\"TaskForm_task__date__RiAVl\",\"task__bottom\":\"TaskForm_task__bottom__Ts5DO\",\"task__category\":\"TaskForm_task__category__1A8+X\",\"task__btnUpdate\":\"TaskForm_task__btnUpdate__zQkcc\",\"task__btnCompete\":\"TaskForm_task__btnCompete__EQ63M\",\"task__btnClose\":\"TaskForm_task__btnClose__PWgQe\",\"task__btnSubmit\":\"TaskForm_task__btnSubmit__PpDHs\",\"task__datePickerBox\":\"TaskForm_task__datePickerBox__0v7n2\",\"task__datepicker_toggle\":\"TaskForm_task__datepicker_toggle__vlAvj\",\"task__datepicker_toggle_button\":\"TaskForm_task__datepicker_toggle_button__gk4uW\",\"task__timepicker_toggle_button\":\"TaskForm_task__timepicker_toggle_button__qjiK-\",\"task__datepicker_input\":\"TaskForm_task__datepicker_input__QjZoR\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal__background\":\"DeleteModal_modal__background__2E3sC\",\"modal__wrapper\":\"DeleteModal_modal__wrapper__lL1j7\",\"modal\":\"DeleteModal_modal__0Afhh\",\"modal__btnBox\":\"DeleteModal_modal__btnBox__p9GS0\",\"modal__btnClose\":\"DeleteModal_modal__btnClose__JVV-m\",\"modal__btnDelete\":\"DeleteModal_modal__btnDelete__F1rQA\",\"modal__title\":\"DeleteModal_modal__title__BLnFZ\"};","\n\nimport s from './DeleteModal.module.css'\nimport { useDispatch } from \"react-redux\";\n\nimport {  deleteCard } from \"redux/cards/cardsOperation\";\n\nexport const DeleteModal = ({ onClose, cardID }) => {\n    const dispatch = useDispatch();\n  \n    const onDeleteContact = (cardID) => {\n    if(cardID){\n      dispatch(deleteCard(cardID));\n    }\n  }\n  \n    return (\n      <>\n      <div className={s.modal__background}/>\n      <div className={s.modal__wrapper}>\n        <div className={s.modal}>\n       \n          \n         <h3 className={s.modal__title}>Delete this Quest?</h3>\n         <div className={s.modal__btnBox}>\n          <button className={s.modal__btnClose} onClick={onClose}>\n              CANCEL\n          </button>\n\n          <button className={s.modal__btnDelete} onClick={() => onDeleteContact(cardID)}>\n            DELETE          \n          </button>\n   \n         </div>\n        \n        </div>\n        </div>\n  </>\n    );\n  }","import { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux'\nimport { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport {confirmCompleteCard } from \"redux/cards/cardsOperation\";\n\n// style\nimport s from './TaskForm.module.css'\n\nimport { DeleteModal } from './DeleteModal/DeleteModal';\nimport difficulties from '../../data/difficulty'\nimport categories from '../../data/category'\n\n// import icons\nimport { RiPencilFill } from \"react-icons/ri\";\nimport { AiFillStar } from 'react-icons/ai';\nimport { CgClose } from 'react-icons/cg';\nimport { FaCheck } from \"react-icons/fa6\";\n\n// import image\nimport completed from 'img/award.png'\n\n//component \nexport const Task = ({card}) => {\n  const [active, setActive] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [modalOpen, setModalOpen] = useState(null);\n\n  const dispatch = useDispatch();\n  const taskId = nanoid();\n  const modalContainer = document.getElementById(`${modalOpen}`);\n\n\n  const confirmCard = (cardID) => {\n    if(cardID){\n      dispatch(confirmCompleteCard(cardID));\n    }\n  }\n  \n\n  const handleActive = () => {\n    if(active){\n      setActive(false);\n      return;\n    }\n    setActive(true);\n  }\n\n    const deleteTask= ( taskId) => {\n      setModalOpen(taskId);\n      setShowModal(true);\n    }\n\n    return (\n      \n        <div className={s.task} id={taskId}>\n        {card.status===\"Complete\"?\n        <div>\n          <p>Completed: \n            <span>{card.title}</span>\n          </p>\n         <img src={completed} alt=\"award\"/>\n        </div>:\n        <div>\n          <div className={s.task__top}>\n  \n          {\n                (() => {\n                  const matchedDifficulties = difficulties.find((difficulty) => difficulty.value === card.difficulty);\n                  if (matchedDifficulties) {\n                    return (\n                      <div key={nanoid()} className={s.task__difficultyBox}> \n            <span className={s.task__difficultyPoint} style={{backgroundColor: matchedDifficulties.color}}></span>\n            <p className={s.task__difficulty} >{card.difficulty}</p> </div>\n                    );\n                  }\n                  return null;\n                })()\n          }\n                  \n            <AiFillStar className={s.task__favIcon}/>\n          </div>   \n          \n          <p className={s.task__title}> {card.title} </p>\n        \n          <div className={s.task__dateBox}>\n            <p className={s.task__date}>{card.date}</p>\n            <p className={s.task__date}>{card.time}</p>\n          </div>\n  \n            {\n            (() => {\n              const matchedCategory = categories.find((category) => category.value === card.category);\n              if (matchedCategory) {\n                return (\n                  <p key={nanoid()} className={s.task__category} style={{ backgroundColor: matchedCategory.color }}>\n                    {card.category}\n                  </p>\n                );\n              }\n              return null;\n            })()\n          }\n        \n        <div className={s.task__bottom}>\n          <RiPencilFill className={s.task__btnUpdate} onClick={handleActive}/>\n            <CgClose  className={s.task__btnClose} onClick={()=> deleteTask(taskId)}/>\n            <FaCheck className={s.task__btnCompete} onClick={()=> confirmCard(card._id)}/>\n        </div>\n    \n        {showModal && modalContainer && createPortal(<DeleteModal cardID={card._id} onClose={() => setShowModal(false)} />, modalContainer)}\n        </div>\n        }\n       \n      </div>\n    );\n  };","\nexport const getCards = state => state.cards.entities;\nexport const getIsLoading = state => state.cards.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"taskList\":\"TaskList_taskList__iq+88\",\"taskList__emptyBox\":\"TaskList_taskList__emptyBox__mQKku\",\"taskList__emptyTitle\":\"TaskList_taskList__emptyTitle__4ILcN\",\"taskList__imageBox\":\"TaskList_taskList__imageBox__y6iiV\",\"taskList__imageTarget\":\"TaskList_taskList__imageTarget__zT+MP\",\"sun-rise\":\"TaskList_sun-rise__ag78c\",\"taskList__imageArrow\":\"TaskList_taskList__imageArrow__Olmpg\"};","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { Task } from '../Task/TaskForm';\nimport { getCards } from 'redux/cards/cardsSelector';\n\n\nimport s from './TaskList.module.css';\nimport arrow from 'img/Arrow_3x.png'\nimport target from 'img/Taget_2.png'\n\nexport const TaskList = () => {\n      const [cards, setCards] = useState([]);\n    const dispatch = useDispatch();\n    const tasks = useSelector(getCards);\n\n\n    useEffect(() => {\n      setCards(tasks.cards)\n        }, [dispatch, tasks])\n\n    return (\n          cards.length===0&&!undefined?\n          <div div className={s.taskList__emptyBox}>\n            <h2 className={s.taskList__emptyTitle}> You don't have any Quest now</h2>\n            <div className={s.taskList__imageBox}>\n               <img src={target} alt=\"target\"  className={s.taskList__imageTarget}/>\n               <img src={arrow} alt=\"arrow\"  className={s.taskList__imageArrow}/>\n            </div>\n           \n          </div>\n            :  \n            <div className={s.taskList}> \n              {cards.map(card => <Task key={nanoid()}  card={card}/>)}\n            </div>\n  \n    );\n  };\n\n","// extracted by mini-css-extract-plugin\nexport default {\"modal__background\":\"ModalWindowFormTask_modal__background__1NG7a\",\"modal__wrapper\":\"ModalWindowFormTask_modal__wrapper__baKmS\",\"modal\":\"ModalWindowFormTask_modal__PO7rZ\",\"modal__btnClose\":\"ModalWindowFormTask_modal__btnClose__qXgAq\",\"modal__title\":\"ModalWindowFormTask_modal__title__YOlnQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"cardForm__top\":\"CardForm_cardForm__top__g72sc\",\"cardForm__titleCategory\":\"CardForm_cardForm__titleCategory__BIXvI\",\"cardForm__inputBox\":\"CardForm_cardForm__inputBox__79QWL\",\"cardForm__titleCenter\":\"CardForm_cardForm__titleCenter__MFHqN\",\"cardForm__inputName\":\"CardForm_cardForm__inputName__mmo80\",\"cardForm__categoryBox\":\"CardForm_cardForm__categoryBox__JOVQl\",\"cardForm__bottom\":\"CardForm_cardForm__bottom__E7wxf\",\"cardForm__btnSubmit\":\"CardForm_cardForm__btnSubmit__1z4Q8\",\"cardForm__btnClose\":\"CardForm_cardForm__btnClose__mO6JT\",\"cardForm__datePickerBox\":\"CardForm_cardForm__datePickerBox__zcviq\",\"cardForm__datepicker_toggle\":\"CardForm_cardForm__datepicker_toggle__dqXY+\",\"cardForm__datepicker_toggle_button\":\"CardForm_cardForm__datepicker_toggle_button__DSeSO\",\"cardForm__timepicker_toggle_button\":\"CardForm_cardForm__timepicker_toggle_button__kaIRP\",\"cardForm__datepicker_input\":\"CardForm_cardForm__datepicker_input__Yy+4q\"};","export const levelsStyles = {\n    singleValue: styles => ({\n      ...styles,\n      color: \"black\",\n      fontFamily: \"HelveticaNeueCyr, sans-serif\",\n      fontSize: \"16px\",\n      fontWeight: \"400\",\n  \n    }),\n      valueContainer: styles => ({\n      ...styles,\n      padding: 0,\n      display:\"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingLeft: \"18px\",\n    \n    }),\n    control: styles => ({\n      ...styles,\n      outline: 'none',\n      boxShadow: 'none',\n      border: '1px solid #00D7FF',\n      borderRadius: '14px',\n  \n      transition: \"0.2s\",\n      backgroundColor: '#fff',\n      color: '#121417',\n        width: '150px',\n        height: '48px',\n        '&:hover': {\n          border: '1px solid #0198b3',\n        },\n    \n    }),\n    dropdownIndicator: (styles, { isFocused }) => ({\n      ...styles,\n      transition: '500ms ease',\n      color:  '#00D7FF' ,\n      '&:hover': {\n        color: '#0198b3',\n        transform: \"rotate(180deg)\",\n      },\n    }),\n    option: (styles, { isFocused }) => ({\n      ...styles,\n      color: isFocused ? '#121417' : '#838383',\n      fontWeight: isFocused ? '400' : '600',\n      fontSize: '14px',\n      backgroundColor: 'transparent',\n      fontFamily: 'Manrope, sans-serif',\n      cursor: 'pointer',\n      lineHeight: '18px',\n      transition: '200ms ease',\n      '&:hover': {\n        backgroundColor: '#dddbdb',\n        color: '#121417',\n        transform: 'scale(1.05)',\n      },\n    }),\n    menuList: styles => ({\n      ...styles,\n      height: '100%',\n      marginBottom: '8px',\n      backgroundColor: '#FFFFFF',\n      borderRadius: '14px',\n      padding: '14px',\n      margin: '-1px',\n      boxSizing: 'content-box',\n    }),\n\n \n  };\n  \n\n\n  export const categoriesStyles = {\n\n    singleValue: styles => ({\n      ...styles,\n      color: \"black\",\n      fontFamily: \"HelveticaNeueCyr, sans-serif\",\n      fontSize: \"16px\",\n      fontWeight: \"400\",\n  \n    }),\n      valueContainer: styles => ({\n      ...styles,\n      padding: 0,\n      display:\"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingLeft: \"18px\",\n    \n    }),\n    control: styles => ({\n      ...styles,\n      outline: 'none',\n      boxShadow: 'none',\n      border: '1px solid #00a3c2',\n      borderRadius: '14px',\n  \n      transition: \"0.2s\",\n      backgroundColor: 'white',\n      color: '#121417',\n        width: '150px',\n        height: '48px',\n    \n    }),\n    dropdownIndicator: (styles, { isFocused }) => ({\n      ...styles,\n      transition: '500ms ease',\n      color:  '#00D7FF' ,\n      '&:hover': {\n        color: '#0b44cd',\n        transform: \"rotate(180deg)\",\n      },\n    }),\n    option: (styles, { isFocused }) => ({\n      ...styles,\n      color: isFocused ? '#121417' : '#838383',\n      fontSize: '14px',\n      backgroundColor: 'transparent',\n      fontFamily: 'Manrope, sans-serif',\n      fontWeight: '400',\n      cursor: 'pointer',\n      lineHeight: '18px',\n      transition: '200ms ease',\n      '&:hover': {\n        backgroundColor: '#dddbdb',\n        color: '#121417',\n        transform: 'scale(1.05)',\n      },\n    }),\n    menuList: styles => ({\n      ...styles,\n      height: '100%',\n      marginBottom: '8px',\n      backgroundColor: '#FFFFFF',\n      borderRadius: '14px',\n      padding: '14px',\n      margin: '-1px',\n      boxSizing: 'content-box',\n    }),\n\n  \n  };\n  ","import { useState } from 'react';\n\nimport s from './CardForm.module.css'\nimport Select from 'react-select';\n\n\nimport { levelsStyles, categoriesStyles } from './inputStyles';\nimport difficulties from 'data/difficulty'\nimport categories from 'data/category'\n\n\nexport const CardForm = ({ sendTask, onClose }) => {\n    const [title, setTitle] = useState('');\n    const [difficulty, setDifficulty] = useState('');\n    const [date, setDate] = useState('YYYY-MM-DD');\n    const [time, setTime] = useState('HH:MM');\n    const [category, setCategory] = useState('');\n  \n     // SUBMIT FORM\n     const handleSubmit = (e) => {\n      e.preventDefault();\n      sendTask(difficulty, title, date, category, time);\n      onClose();\n    }\n  \n    // CHANGE FORM\n    const handleChange = (e) => {\n      if(e.currentTarget ===undefined){\n        switch ( e.name) {\n          case \"difficulty\":\n            setDifficulty(e.value)\n              break;\n  \n          case \"category\":\n           setCategory(e.value)\n          break;\n         \n        default:\n        break;\n        }\n  \n        return\n      }\n    \n      if(e.currentTarget){\n        const { name, value } = e.currentTarget \n  \n        switch (name) {\n            case \"title\":\n              setTitle(value)\n            break;\n             \n            case \"date\":\n            const parts = value.split('T');\n            setDate(parts[0])\n            setTime(parts[1])\n            break;\n  \n  \n            default:\n            break;\n      }\n    }    \n    }\n  \n  \n    return (\n      <>\n   \n    <form action=\"\" onSubmit={handleSubmit}>\n  \n  <div className={s.cardForm__top}>\n  <p className={s.cardForm__titleCategory}>Difficulty:</p>\n   <Select\n   className=\"basic-single\"\n   name=\"difficulty\"\n   options={difficulties}\n   styles={levelsStyles}\n   defaultValue={difficulties[1]}\n   onChange={handleChange}\n  />\n     </div>\n\n   <div className={s.cardForm__inputBox}>\n   <label htmlFor=\"title\" className={s.cardForm__titleCenter}>Title:</label>     \n   <input type=\"text\" className={s.cardForm__inputName} name=\"title\" onChange={handleChange}  required/>\n    </div>\n        \n   <div className={s.cardForm__datePickerBox}>\n        {date?<p>{date} {time}</p>:<label htmlFor=\"date\">Date:</label>}\n        <span className={s.cardForm__datepicker_toggle}>\n        <span className={s.cardForm__datepicker_toggle_button}></span>\n          <input name=\"date\" type=\"datetime-local\" className={s.cardForm__datepicker_input} onChange={handleChange}  required/>\n        </span>\n      </div>\n \n  \n   <div className={s.cardForm__categoryBox}>\n   <p className={s.cardForm__titleCategory}>Category:</p>\n   <Select\n   className=\"basic-single\"\n   classNamePrefix=\"select\"\n   name=\"category\"\n   options={categories}\n   styles={categoriesStyles}\n   onChange={handleChange}\n  />\n  </div>\n  \n   <div className={s.cardForm__bottom} >\n   <button type='submit' className={s.cardForm__btnSubmit}> START</button>\n  </div>\n        </form>\n    \n  </>\n    );\n  }","import s from './ModalWindowFormTask.module.css'\nimport { CgClose } from 'react-icons/cg';\nimport { CardForm } from './CardForm/CardForm';\n\n\nexport const ModalContent = ({ onClose, sendTask }) => {\n\n  return (\n    <>\n    <div className={s.modal__background}/>\n    <div className={s.modal__wrapper}>\n      <div className={s.modal}>\n      <CgClose  className={s.modal__btnClose} onClick={onClose}/>\n        \n       <h2 className={s.modal__title}>Create New Quest</h2>\n      <CardForm sendTask={sendTask} onClose={onClose}/>\n      </div>\n      </div>\n</>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\"};","import s from './Loader.module.css'\n\nimport { BounceLoader } from 'react-spinners';\n\nexport default function Loader() {\n  return (\n  <BounceLoader color=\"#00D7FF\" className={s.spinner}/>\n  );\n}","\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector  } from 'react-redux'\nimport { createPortal } from 'react-dom';\n\nimport { Header } from \"components/Header/Header\";\nimport { AddTaskBtn } from \"components/AddTaskBtn/AddTaskBtn\";\nimport { TaskList } from \"components/TaskList/TaskList\";\nimport { ModalContent } from \"components/ModalWindowFormTask/ModalWindowFormTask\";\nimport Loader from \"components/Loader/Loader\";\n\nimport { fetchCard } from 'redux/cards/cardsOperation'\nimport { getIsLoading } from \"redux/cards/cardsSelector\";\nimport { addCard } from \"redux/cards/cardsOperation\";\n\n\n// PAGE DashboardPage\nexport default function DashboardPage(){\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchCard())\n      }, [dispatch])\n\n\n      const openModal = () => {\n        setShowModal(true)\n        document.body.style.overflow = 'hidden'; \n      \n      }\n\n      const closeModal = () => {\n        setShowModal(false)\n        document.body.style.overflow = '';\n      }\n\n\n           // ADD NEW TASK\n   const sendTask = (difficulty, title, date, category, time) => {\n    dispatch(\n      addCard({\n          \"title\": title,\n            \"difficulty\": difficulty,\n            \"category\": category,\n            \"date\": date,\n            \"time\": time,\n            \"type\": \"Task\"\n          }\n    ))\n   };\n\n\n    return (\n      <div >\n    <Header/>\n      {isLoading?<Loader/>: <TaskList /> }\n\n      <AddTaskBtn onClick={openModal}/>\n\n      {showModal && createPortal(\n        <ModalContent onClose={closeModal} sendTask={sendTask}/>,\n        document.body\n      )}\n  </div>\n      \n    ) ;\n}"],"names":["Header","email","useSelector","authSelector","dispatch","useDispatch","nav","useNavigate","console","log","className","s","src","alt","to","onClick","logOut","AddTaskBtn","type","DeleteModal","onClose","cardID","deleteCard","onDeleteContact","Task","card","useState","active","setActive","showModal","setShowModal","modalOpen","setModalOpen","taskId","nanoid","modalContainer","document","getElementById","id","status","title","matchedDifficulties","difficulties","difficulty","value","style","backgroundColor","color","date","time","matchedCategory","categories","category","deleteTask","_id","confirmCompleteCard","createPortal","getCards","state","cards","entities","getIsLoading","isLoading","TaskList","setCards","tasks","useEffect","length","div","map","levelsStyles","singleValue","styles","fontFamily","fontSize","fontWeight","valueContainer","padding","display","alignItems","justifyContent","paddingLeft","control","outline","boxShadow","border","borderRadius","transition","width","height","dropdownIndicator","isFocused","transform","option","cursor","lineHeight","menuList","marginBottom","margin","boxSizing","categoriesStyles","CardForm","sendTask","setTitle","setDifficulty","setDate","setTime","setCategory","handleChange","e","undefined","currentTarget","name","parts","split","action","onSubmit","preventDefault","options","defaultValue","onChange","htmlFor","required","classNamePrefix","ModalContent","Loader","BounceLoader","DashboardPage","fetchCard","body","overflow","addCard"],"sourceRoot":""}