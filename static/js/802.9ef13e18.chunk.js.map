{"version":3,"file":"static/js/802.9ef13e18.chunk.js","mappings":"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","sources":["webpack://Questify/./src/components/Header/Header.module.css?4e72","components/Header/Header.jsx","webpack://Questify/./src/components/Task/TaskForm.module.css?09c0","components/Task/inputStyles.js","components/Task/TaskForm.jsx","webpack://Questify/./src/components/AddTaskBtn/AddTaskBtn.module.css?0a25","components/AddTaskBtn/AddTaskBtn.jsx","webpack://Questify/./src/pages/DashboardPage/DashboardPage.module.css?b183","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HXQOm\",\"header__container\":\"Header_header__container__urE9T\",\"header__logo\":\"Header_header__logo__DRD+M\",\"header__btnLogOutBox\":\"Header_header__btnLogOutBox__L-SR8\",\"header__btnLogOut\":\"Header_header__btnLogOut__bdwbe\"};","import { useSelector, useDispatch } from 'react-redux'\nimport { IoMdLogOut } from \"react-icons/io\";\nimport { logOut } from 'redux/auth/authOperation';\n\nimport authSelector from '../../redux/auth/authSelector'\nimport s from './Header.module.css'\n\nexport const Header = () => {\n  const email = useSelector(authSelector.getUserEmail)\n\n  const dispatch = useDispatch();\n\n\n    return (\n      <div className={s.header}>\n        \n        <div className={s.header__container}>\n        <span className={s.header__logo}>Questify</span>\n       \n       <div>\n        <img src=\"\" alt=\"\" />\n            {email}\n       </div>\n\n       <div className={s.header__btnLogOutBox} onClick={() => dispatch(logOut())}>\n       <IoMdLogOut className={s.header__btnLogOut}/>\n\n       </div>\n       </div>\n \n      </div>\n    );\n  };\n  ","// extracted by mini-css-extract-plugin\nexport default {\"task\":\"TaskForm_task__DyrEy\",\"task__top\":\"TaskForm_task__top__XOuvj\",\"task__inputName\":\"TaskForm_task__inputName__mMZNE\",\"task__bottom\":\"TaskForm_task__bottom__Ts5DO\",\"task__btnClose\":\"TaskForm_task__btnClose__PWgQe\",\"task__btnSubmit\":\"TaskForm_task__btnSubmit__PpDHs\",\"task__datePickerBox\":\"TaskForm_task__datePickerBox__0v7n2\",\"task__datepicker_toggle\":\"TaskForm_task__datepicker_toggle__vlAvj\",\"task__datepicker_toggle_button\":\"TaskForm_task__datepicker_toggle_button__gk4uW\",\"task__timepicker_toggle_button\":\"TaskForm_task__timepicker_toggle_button__qjiK-\",\"task__datepicker_input\":\"TaskForm_task__datepicker_input__QjZoR\"};","const dot = (color = 'red') => ({\n    alignItems: 'center',\n    display: 'flex',\n  \n    ':before': {\n      backgroundColor: 'red',\n      borderRadius: 10,\n      content: '\" \"',\n      display: 'block',\n      marginRight: 3,\n      height: 7,\n      width: 7,\n    },\n  });\n\nexport const levelsStyles = {\n\n    singleValue: styles => ({\n      ...styles,\n      color: \"#B9C3C8\",\n      fontFamily: \"HelveticaNeueCyr, sans-serif\",\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n  \n    }),\n      valueContainer: styles => ({\n      ...styles,\n      padding: 0,\n      display:\"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      paddingLeft: \"18px\",\n    \n    }),\n    control: styles => ({\n      ...styles,\n      outline: 'none',\n      boxShadow: 'none',\n      border: 'none',\n      borderRadius: '14px',\n  \n      transition: \"0.2s\",\n      backgroundColor: '#fff',\n      color: '#121417',\n        width: '140px',\n        height: '48px',\n    \n    }),\n    dropdownIndicator: (styles, { isFocused }) => ({\n      ...styles,\n      transition: '500ms ease',\n      color:  '#00D7FF' ,\n      '&:hover': {\n        color: '#0b44cd',\n        transform: \"rotate(180deg)\",\n      },\n    }),\n    option: (styles, { isFocused }) => ({\n      ...styles,\n      color: isFocused ? '#121417' : '#12141733',\n      fontSize: '14px',\n      backgroundColor: 'transparent',\n      fontFamily: 'Manrope, sans-serif',\n      fontWeight: '400',\n      cursor: 'pointer',\n      lineHeight: '18px',\n      transition: '200ms ease',\n      '&:hover': {\n        backgroundColor: 'transparent',\n        color: '#121417',\n        transform: 'scale(1.05)',\n      },\n    }),\n    menuList: styles => ({\n      ...styles,\n      height: '100%',\n      marginBottom: '8px',\n      backgroundColor: '#FFFFFF',\n      borderRadius: '14px',\n      padding: '14px',\n      margin: '-1px',\n      boxSizing: 'content-box',\n      width: '90px',\n\n    }),\n\n    placeholder: (styles) => ({ ...styles, ...dot('#ccc') }),\n  };\n  ","import Select from 'react-select';\nimport { AiFillStar } from 'react-icons/ai';\nimport { CgClose } from 'react-icons/cg';\n// import { useDispatch } from 'react-redux'\nimport { useState } from 'react';\n\nimport s from './TaskForm.module.css'\nimport { levelsStyles } from './inputStyles';\nimport levels from '../../data/level'\nimport categories from '../../data/category'\n\n\n//component \nexport const Task = ({ sendTask, task}) => {\n  const [title, setTitle] = useState('');\n  const [difficulty, setDifficulty] = useState('');\n  const [date, setDate] = useState('___-__-__');\n  const [time, setTime] = useState('___:___');\n  const [category, setCategory] = useState('');\n\n  const handleChange = (e) => {\n  \n    if(e.currentTarget ===undefined){\n      switch ( e.name) {\n        case \"difficulty\":\n          setDifficulty(e.value)\n            break;\n\n        case \"category\":\n         setCategory(e.value)\n        break;\n       \n      default:\n      break;\n      }\n\n      return\n    }\n  \n    if(e.currentTarget){\n      const { name, value } = e.currentTarget \n\n      switch (name) {\n          case \"title\":\n            setTitle(value)\n          break;\n           \n          case \"date\":\n          const parts = value.split('T');\n          setDate(parts[0])\n          setTime(parts[1])\n          break;\n\n\n          default:\n          break;\n    }\n  }    \n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendTask(difficulty, title, date, category, time)   \n  }\n\n    const deleteTask= (id, e) => {\n      console.log(e.currentTarget)\n      // // dispatch(deleteCard(id));\n    }\n\n\n    return (\n\n      \n        <div className={s.task}>\n        <form action=\"\" onSubmit={handleSubmit}>\n\n       <div className={s.task__top}>\n                <Select\n              className=\"basic-single\"\n              classNamePrefix=\"select\"\n              name=\"difficulty\"\n              options={levels}\n              styles={levelsStyles}\n              onChange={handleChange}\n            />\n          <AiFillStar className={s.task__favIcon}/>\n        </div>   \n        \n\n        <input type=\"text\" className={s.task__inputName} name=\"title\" onChange={handleChange}  required/>\n\n      <div className={s.task__datePickerBox}>\n          {date?<p>{date} {time}</p>:<label htmlFor=\"date\">Date:</label>}\n          <span className={s.task__datepicker_toggle}>\n          <span className={s.task__datepicker_toggle_button}></span>\n            <input name=\"date\" type=\"datetime-local\" className={s.task__datepicker_input} onChange={handleChange}  required/>\n          </span>\n        </div>\n  \n      \n      <Select\n              className=\"basic-single\"\n              classNamePrefix=\"select\"\n              name=\"category\"\n              options={categories}\n              styles={levelsStyles}\n              onChange={handleChange}\n            />\n\n<div className={s.task__bottom} >\n  <CgClose  className={s.task__btnClose} onClick={deleteTask}/>\n  <button type='submit' className={s.task__btnSubmit}> START</button>\n</div>\n\n</form>\n      </div>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"addTaskBtn\":\"AddTaskBtn_addTaskBtn__tfpui\",\"addTaskBtn__icon\":\"AddTaskBtn_addTaskBtn__icon__SfWSm\"};","import { BsFillPlusSquareFill } from 'react-icons/bs';\nimport s from './AddTaskBtn.module.css'\n\n\nexport const AddTaskBtn = ({addTask}) => {\n\n\n    return (\n     <button type='button' className={s.addTaskBtn} onClick={addTask}>\n      <BsFillPlusSquareFill className={s.addTaskBtn__icon}/>\n     </button>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"Dashboard__taskSection\":\"DashboardPage_Dashboard__taskSection__3xYiN\"};","\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux'\n\n\nimport { Header } from \"components/Header/Header\";\nimport { Task } from \"components/Task/TaskForm\";\nimport { AddTaskBtn } from \"components/AddTaskBtn/AddTaskBtn\";\nimport { addCard } from \"../../redux/cards/cardsOperation\";\n\nimport { fetchCard } from '../../redux/cards/cardsOperation'\n\n// import { getCards } from 'redux/cards/cardsSelector'\n\n\nimport s from './DashboardPage.module.css'\nimport { nanoid } from \"@reduxjs/toolkit\";\n\n\n// PAGE DashboardPage\nexport default function DashboardPage(){\n  const [tasks, setTasks] = useState([]);\n\n  // const cards = useSelector(getCards);\n\n  const dispatch = useDispatch();\n\n    useEffect(() => {\n    dispatch(fetchCard())\n\n      }, [dispatch])\n\n\n  const addTask = () => {\n   setTasks([...tasks, <Task/>])\n  };\n\n\n   const sendTask = (difficulty, title, date, category, time) => {\n    dispatch(\n      addCard({\n          \"title\": title,\n            \"difficulty\": difficulty,\n            \"category\": category,\n            \"date\": date,\n            \"time\": time,\n            \"type\": \"Task\"\n          }\n    ))\n   };\n\n    return (\n\n  <div>\n    <Header/>\n    <div className={s.Dashboard__taskSection} >\n\n\n {tasks.map(task => <Task key={nanoid()} sendTask={sendTask} task={task}/>)}\n    </div>\n   \n\n      <AddTaskBtn addTask={addTask}/>\n  </div>\n      );\n      \n    }"],"names":["Header","email","useSelector","authSelector","dispatch","useDispatch","className","s","src","alt","onClick","logOut","levelsStyles","singleValue","styles","color","fontFamily","fontSize","fontWeight","valueContainer","padding","display","alignItems","justifyContent","paddingLeft","control","outline","boxShadow","border","borderRadius","transition","backgroundColor","width","height","dropdownIndicator","isFocused","transform","option","cursor","lineHeight","menuList","marginBottom","margin","boxSizing","placeholder","content","marginRight","Task","sendTask","task","useState","title","setTitle","difficulty","setDifficulty","date","setDate","time","setTime","category","setCategory","handleChange","e","undefined","currentTarget","name","value","parts","split","action","onSubmit","preventDefault","classNamePrefix","options","levels","onChange","type","required","htmlFor","categories","id","console","log","AddTaskBtn","addTask","DashboardPage","tasks","setTasks","useEffect","fetchCard","addCard","map","nanoid"],"sourceRoot":""}